#vars

    subclasses json("&./articles/subclasses/subclasses")
    methods    json("&./articles/methods/methods")
    abstract   json("&./articles/methods/abstract")

#end

aside
{

    select (onchange="location=`#${this.value}`;") {
        otpgroup (label="Getting Started") { option (value="usage") "Usage" }

        optgroup (label=Options) {
            each str_split('scriptAsync, useOptionContentForEmptyOptionValue, defaultInputType, mode' ', ') {
                option (value="TagBuilderOptions.${@this | trim }") replace(trim(@this) "^static" "")
            }
        }

        optgroup (label="TagBuilder Methods") {
            each @methods {
                option (value="TagBuilder.${@this | trim }") replace(trim(@this) "^(.*[ ])?" "")
            }
        }

        optgroup (label="TagBuilder Subclasses") {
            each @subclasses {
                option (value="${@this | trim }Builder") trim(@this)
            }
        }

        option (value="SVGBuilder") "SVGBuilder"
        option (value="SVGElementBuilder") "SVGElementBuilder"
    }

    nav
    {
        ul
        {
            li
            {
                a (href='#usage') 'Getting Started'
                ul (.sublist) {
                    li { a (href="#usage") 'Usage' }
                }
            }
            li
            {
                a (href='#options') 'Options'
                ul (.sublist) {
                    each str_split('scriptAsync, useOptionContentForEmptyOptionValue, defaultInputType, mode' ', ') {
                        li
                        {
                            a (href="#TagBuilderOptions.${@this | trim }") replace(trim(@this) "^static" "")
                        }
                    }
                }
            }
            li
            {
                a (href='#methods') 'TagBuilder Methods'
                ul (.sublist) {
                    each @methods {
                        #vars
                            method replace(trim(@this) "^.*Builder\.(.*$)" "$1")
                        #end

                        li
                        {
                            a (href="#TagBuilder.${@method | trim }") replace(trim(@this) "^(.*[ ])?" "")
                        }
                    }
                }
            }
            li
            {
                a (href="#subclasses") 'TagBuilder Subclasses'
                ul (.sublist) {
                    each @subclasses {
                        li { a (href="#${@this | trim }Builder") trim(@this) }
                    }
                }
            }
            li
            {
                a (href="#SVGBuilder") "SVGBuilder"
                ul (.sublist) {
                    each @abstract {
                        li { a (href="#SVGBuilder.${@this | trim }") replace(trim(@this) "^static" "") }
                    }
                }
            }

            li
            {
                a (href="#SVGElementBuilder") "SVGElementBuilder"
                ul (.sublist) {

                    #vars
                        svgmethods join(@abstract ",")
                        svgmethods "${@svgmethods},viewBox,y,x,preserveAspectRatio,stroke,fill"
                    #end

                    each sort(str_split(@svgmethods ",") 'asc') {
                        li
                        {
                            a (href="#SVGElementBuilder.${@this | trim }") replace(trim(@this) "^static" "")
                        }
                    }
                }
            }
        }
    }

}