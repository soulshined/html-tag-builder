h3 (#VideoBuilder) { a (href="#VideoBuilder") "VideoBuilder" }

p html_encode("This element builder is used to create an element (`<video>`) that embeds a media player which supports video playback into the document")

details
{

    summary "Documentation"

    import "templates/subclass_methods" {
        name    "constructor"
        args    "src: string; type: string; id?: string"
        returns "VideoBuilder<HTMLVideoElement>"
        usage   "new VideoBuilder('www.example.com/video.mp4', 'video/mp4');"
        refs    "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video"
    }

    import "templates/subclass_methods" {
        name        "addFallbackSrc"
        args        "src: string; type: string"
        returns     "VideoBuilder<HTMLVideoElement>"
        description {
            p "Add a source for browsers that don't support main src"
            p html_encode("Provide url and mimetype of url content")
        }
        usage       "new VideoBuilder('www.example.com/video.mp4', 'video/mp4').addFallbackSrc('www.example.com/video.ogg', 'video/ogg');"
    }

    import "templates/subclass_methods" {
        name        "loop"
        args        ""
        returns     "VideoBuilder<HTMLVideoElement>"
        description "The audio player will automatically seek back to the start upon reaching the end of the audio"
        usage       "new VideoBuilder('www.example.com/video.mp4', 'video/mp4').loop();"
    }

    import "templates/subclass_methods" {
        name        "muted"
        args        ""
        returns     "VideoBuilder<HTMLVideoElement>"
        description "Mutes the element"
        usage       "new VideoBuilder('www.example.com/video.mp4', 'video/mp4').muted();"
    }

    import "templates/subclass_methods" {
        name        "noControls"
        args        ""
        returns     "VideoBuilder<HTMLVideoElement>"
        description "Indicates that the browser will not offer controls to allow the user to control audio playback, including volume, seeking, and pause/resume playback"
        usage       "new VideoBuilder('www.example.com/video.mp4', 'video/mp4').noControls();"
    }

    import "templates/subclass_methods" {
        name        "onNotSupported"
        args        "html: string"
        returns     "VideoBuilder<HTMLVideoElement>"
        description "HTML or text to be displayed for browsers that do not support this element"
        usage       "new VideoBuilder('www.example.com/video.mp4', 'video/mp4').onNotSupported('<div>Not supported in this browser</div>');"
    }

    import "templates/subclass_methods" {
        name        "poster"
        args        "url: string"
        returns     "VideoBuilder<HTMLVideoElement>"
        description "A URL for an image to be shown while the video is downloading. If this attribute isn't specified, nothing is displayed until the first frame is available, then the first frame is shown as the poster frame"
        usage       "new VideoBuilder('www.example.com/video.mp4', 'video/mp4').preload('auto');"
    }

    import "templates/subclass_methods" {
        name        "preload"
        args        "value: 'none' | 'metadata' | 'auto' = 'auto'"
        returns     "VideoBuilder<HTMLVideoElement>"
        description "Provide a hint to the browser about what the author thinks will lead to the best user experience"
        usage       "new VideoBuilder('www.example.com/video.mp4', 'video/mp4').preload('auto');"
        refs        "
            https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track
        "
    }

    import "templates/subclass_methods" {
        name        "track"
        args        "src: string; kind: 'subtitles' | 'captions' | 'descriptions' | 'chapters' | 'metadata'; isDefault?: boolean; srclang?: string; label?: string"
        returns     "VideoBuilder<HTMLVideoElement>"
        description "Specify timed text tracks (or time-based data), for example to automatically handle subtitles. The tracks are formatted in WebVTT format (.vtt files) â€” Web Video Text Tracks"
        usage       "new VideoBuilder('www.example.com/video.mp4', 'video/mp4').track('/media/examples/source.vtt', 'captions', true, 'en');"
    }

}